name: Deploy

# concurrency: prod

on:
#  push:
#    branches:
#      - main
      
  workflow_dispatch:

jobs:
  deployment-prod:
    permissions: write-all
    runs-on: ubuntu-latest
#    environment: prod
    steps:
      - name: Get latest release tag
        run: |
          gh api \
          -H "Accept: application/vnd.github+json" \
          /repos/FilipTelia/rel-dep-test/releases/latest > temp.json
          
          LATEST_RELEASE_TAG=$(jq '.tag_name' temp.json | tr -d '"')
          echo "Tag Name: "
          echo $LATEST_RELEASE_TAG
          echo "LATEST_RELEASE_TAG=$(echo $LATEST_RELEASE_TAG)" >> $GITHUB_ENV
          
          
      - name: Create Deployment
        run: |
          gh api \
          --method POST \
          -H "Accept: application/vnd.github+json" \
          /repos/FilipTelia/rel-dep-test/deployments \
          -f ref='${{ env.LATEST_RELEASE_TAG }}' \
          -f description='DEPLOYMENT OF LATEST RELEASE: ${{ env.LATEST_RELEASE_TAG }}' \
          -f environment='prod' \
          -F auto_merge=false
          
          echo "Deployment created"
          
      - name: Deploy to remote server
        run: |
          echo "Doing deployment stuff"
          
            
      - name: Get deployment id
        run: |
          gh api \
          -H "Accept: application/vnd.github+json" \
          /repos/FilipTelia/rel-dep-test/deployments?ref=${{ env.LATEST_RELEASE_TAG }} > temp.json
          
          DEPLOYMENT_ID=$(jq '.[0].id' temp.json)
          echo "Deployment ID: "
          echo $DEPLOYMENT_ID
          echo "DEPLOYMENT_ID=$(echo $DEPLOYMENT_ID)" >> $GITHUB_ENV
          
      - name: Update status
        run: |
          gh api \
          --method POST \
          -H "Accept: application/vnd.github+json" \
          /repos/FilipTelia/rel-dep-test/deployments/${{ env.DEPLOYMENT_ID }}/statuses \
          -f environment='prod' \
          -f state='success' \
          -f log_url='steps.${{ steps['Deploy to remote server'].id }}.outputs.url' \
          -f environment_url='https://example.com/deployment/${{ env.DEPLOYMENT_ID }}/output' \
          -f description='Deployment finished successfully.' \
          -F auto_inactive=true
          
      
    env:
      GH_TOKEN: ${{ github.token }}
        
